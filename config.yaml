# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 10801 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

allow-lan: true # 允许局域网连接
# bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
# authentication: # http,socks 入口的验证用户名，密码
#   - "username:password"
# skip-auth-prefixes: # 设置跳过验证的 IP 段
#   - 127.0.0.1/8
#   - ::1/128
# lan-allowed-ips: # 允许连接的 IP 地址段，仅作用于 allow-lan 为 true, 默认值为 0.0.0.0/0 和::/0
#   - 0.0.0.0/0
#   - ::/0
# lan-disallowed-ips: # 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
#   - 192.168.0.3/32

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

#开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
unified-delay: true
# TCP 并发
# 同时对所有ip进行连接，返回延迟最低的地址
tcp-concurrent: true

# rule 规则匹配
# global 全局代理 (需要在 GLOBAL 策略组选择代理/策略)
# direct 全局直连
# 此项拥有默认值，默认为规则模式
mode: rule

# 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true为 dat，此项有默认值 false
geodata-mode: true 
# 可选的加载模式如下
# standard：标准加载器
# memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: memconservative
#自定义 geodata url
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
geo-auto-update: true # 是否自动更新 geodata
geo-update-interval: 168 # 更新间隔，单位：小时

# Matcher implementation used by GeoSite, available implementations:
# - succinct (default, same as rule-set)
# - mph (from V2Ray, also `hybrid` in Xray)
# geosite-matcher: succinct

log-level: info # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录


# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: random

# 缓解移动设备耗电问题
# https://github.com/vernesong/OpenClash/issues/2614
# TCP Keep Alive 包的间隔，单位为秒
#  TCP keep alive interval
# disable-keep-alive: false #目前在android端强制为true
# keep-alive-idle: 15
keep-alive-interval: 1800

# routing-mark:6666 # 配置 fwmark 仅用于 Linux

# 类似于 /etc/hosts, 仅支持配置单个 IP
hosts:
# '*.mihomo.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.mihomo.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# home.lan: lan # lan 为特别字段，将加入本地所有网卡的地址
# baidu.com: google.com # 只允许配置一个别名

profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  # 存储 select 选择记录
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  # 持久化 fake-ip
  store-fake-ip: true

# 域名嗅探
sniffer:
  enable: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]

# # Tun 配置
# tun:
#   enable: false
#   stack: system # gvisor/mixed
#   dns-hijack:
#     - 0.0.0.0:53 # 需要劫持的 DNS
#   # auto-detect-interface: true # 自动识别出口网卡
#   # auto-route: true # 配置路由表
#   # mtu: 9000 # 最大传输单元
#   # gso: false # 启用通用分段卸载，仅支持 Linux
#   # gso-max-size: 65536 # 通用分段卸载包的最大大小
#   auto-redirect: false # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
#   # strict-route: true # 将所有连接路由到 tun 来防止泄漏，但你的设备将无法其他设备被访问
#   route-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 不匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
#     - ruleset-1
#     - ruleset-2
#   route-exclude-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
#     - ruleset-3
#     - ruleset-4
#   route-address: # 启用 auto-route 时使用自定义路由而不是默认路由
#     - 0.0.0.0/1
#     - 128.0.0.0/1
#     - "::/1"
#     - "8000::/1"
#   # inet4-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
#   #   - 0.0.0.0/1
#   #   - 128.0.0.0/1
#   # inet6-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
#   #   - "::/1"
#   #   - "8000::/1"
#   # endpoint-independent-nat: false # 启用独立于端点的 NAT
#   # include-interface: # 限制被路由的接口。默认不限制，与 `exclude-interface` 冲突
#   #   - "lan0"
#   # exclude-interface: # 排除路由的接口，与 `include-interface` 冲突
#   #   - "lan1"
#   # include-uid: # UID 规则仅在 Linux 下被支持，并且需要 auto-route
#   # - 0
#   # include-uid-range: # 限制被路由的的用户范围
#   # - 1000:9999
#   # exclude-uid: # 排除路由的的用户
#   #- 1000
#   # exclude-uid-range: # 排除路由的的用户范围
#   # - 1000:9999

#   # Android 用户和应用规则仅在 Android 下被支持
#   # 并且需要 auto-route

#   # include-android-user: # 限制被路由的 Android 用户
#   # - 0
#   # - 10
#   # include-package: # 限制被路由的 Android 应用包名
#   # - com.android.chrome
#   # exclude-package: # 排除被路由的 Android 应用包名
#   # - com.android.captiveportallogin

# # 嗅探域名 可选配置
# sniffer:
#   enable: false
#   ## 对 redir-host 类型识别的流量进行强制嗅探
#   ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
#   # force-dns-mapping: false
#   ## 对所有未获取到域名的流量进行强制嗅探
#   # parse-pure-ip: false
#   # 是否使用嗅探结果作为实际访问，默认 true
#   # 全局配置，优先级低于 sniffer.sniff 实际配置
#   override-destination: false
#   sniff: # TLS 和 QUIC 默认如果不配置 ports 默认嗅探 443
#     QUIC:
#     #  ports: [ 443 ]
#     TLS:
#     #  ports: [443, 8443]

#     # 默认嗅探 80
#     HTTP: # 需要嗅探的端口
#       ports: [80, 8080-8880]
#       # 可覆盖 sniffer.override-destination
#       override-destination: true
#   force-domain:
#     - +.v2ex.com
#   # skip-src-address: # 对于来源ip跳过嗅探
#   #   - 192.168.0.3/32
#   # skip-dst-address: # 对于目标ip跳过嗅探
#   #   - 192.168.0.3/32
#   ## 对嗅探结果进行跳过
#   # skip-domain:
#   #   - Mijia Cloud
#   # 需要嗅探协议
#   # 已废弃，若 sniffer.sniff 配置则此项无效
#   sniffing:
#     - tls
#     - http
#   # 强制对此域名进行嗅探

#   # 仅对白名单中的端口进行嗅探，默认为 443，80
#   # 已废弃，若 sniffer.sniff 配置则此项无效
#   port-whitelist:
#     - "80"
#     - "443"
#     # - 8000-9999

# tunnels: # one line config
#   - tcp/udp,127.0.0.1:6553,114.114.114.114:53,proxy
#   - tcp,127.0.0.1:6666,rds.mysql.com:3306,vpn
#   # full yaml config
#   - network: [tcp, udp]
#     address: 127.0.0.1:7777
#     target: target.com
#     proxy: proxy

# DNS 配置
dns:
  enable: true # 关闭将使用系统 DNS
  prefer-h3: true # 是否开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053 # 开启 DNS 服务器监听
  ipv6: true # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  # 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 223.5.5.5    # 阿里
    - 114.114.114.114 #三大运营商
    - 8.8.8.8  # 谷歌
    - tls://1.12.12.12:853
    - tls://223.5.5.5:853
    - system # append DNS server from system configuration. If not found, it would print an error log and skip.
  enhanced-mode: fake-ip # or redir-host

  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置

  # 配置不使用 fake-ip 的域名
  fake-ip-filter:
    - '*.lan'
    - '+.local'
    # fakeip-filter 为 rule-providers 中的名为 fakeip-filter 规则订阅，
    # 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # - rule-set:fakeip-filter
    # # fakeip-filter 为 geosite 中名为 fakeip-filter 的分类（需要自行保证该分类存在）
    # - geosite:fakeip-filter
  # 配置fake-ip-filter的匹配模式，默认为blacklist，即如果匹配成功不返回fake-ip
  # 可设置为whitelist，即只有匹配成功才返回fake-ip
  fake-ip-filter-mode: blacklist

  # use-hosts: true # 查询 hosts

  # 配置后面的nameserver、fallback和nameserver-policy向dns服务器的连接过程是否遵守遵守rules规则
  # 如果为false（默认值）则这三部分的dns服务器在未特别指定的情况下会直连
  # 如果为true，将会按照rules的规则匹配链接方式（走代理或直连），如果有特别指定则任然以指定值为准
  # 仅当proxy-server-nameserver非空时可以开启此选项, 强烈不建议和prefer-h3一起使用
  # 此外，这三者配置中的dns服务器如果出现域名会采用default-nameserver配置项解析，也请确保正确配置default-nameserver
  respect-rules: false

  # DNS 主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    - 114.114.114.114 # default value
    - 8.8.8.8 # default value
    - tls://223.5.5.5:853 # DNS over TLS
    - https://doh.pub/dns-query # DNS over HTTPS
    - https://dns.alidns.com/dns-query 
    # - '8.8.8.8#RULES' # 效果同respect-rules，但仅对该服务器生效
    # - '8.8.8.8#en0' # 兼容指定 DNS 出口网卡

  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
  fallback:
    - tls://8.8.4.4
    - tls://1.1.1.1
  #   - tcp://1.1.1.1
  #   - 'tcp://1.1.1.1#ProxyGroupName' # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡

  # 专用于节点域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  proxy-server-nameserver:
    - https://doh.pub/dns-query
    - 8.8.8.8
  #   - https://dns.google/dns-query
  #   - tls://one.one.one.one

  # 专用于direct出口域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  # direct-nameserver:
  #   - system://
  # direct-nameserver-follow-policy: false # 是否遵循nameserver-policy，默认为不遵守，仅当direct-nameserver不为空时生效

  # 配置 fallback 使用条件
  # fallback-filter:
  #   geoip: true # 配置是否使用 geoip
  #   geoip-code: CN # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
  #   配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
  #   geosite:
  #     - gfw
  #   如果不匹配 ipcidr 则使用 nameservers 中的结果
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'
  fallback-filter:
  geoip: true
  geoip-code: CN
  geosite:
    - gfw
  ipcidr:
    - 240.0.0.0/4
  domain:
    - '+.google.com'
    - '+.facebook.com'
    - '+.youtube.com'

  # 配置查询域名使用的 DNS 服务器
  nameserver-policy:
    "geosite:cn,private":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:!cn,!private": 
      - "tls://dns.google"
      - "tls://cloudflare-dns.com"
    #   'www.baidu.com': '114.114.114.114'
    #   '+.internal.crop.com': '10.0.0.1'
    # "geosite:cn":
    #   - https://doh.pub/dns-query
    #   - https://dns.alidns.com/dns-query
    # "geosite:category-ads-all": rcode://success
    # "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
    ## global，dns 为 rule-providers 中的名为 global 和 dns 规则订阅，
    ## 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # "rule-set:global,dns": 8.8.8.8

proxies:
  # vless-reality-vision
  - name: "Japan"
    type: vless
    server: 47.245.15.91
    port: 28934
    uuid: 21c03409-7ae9-4837-9902-be71ce9b85d8
    network: tcp
    tls: true
    udp: true
    flow: xtls-rprx-vision
    servername: Japan@xray.com # REALITY servername
    reality-opts:
      public-key: UtL7E0Gmxj3X5JdcPAutpTRKo7K2hugkR0vwk2XroUM
      short-id: d31d2a66 # optional
    client-fingerprint: chrome # cannot be empty


  # # Trojan
  # - name: "trojan"
  #   type: trojan
  #   server: server
  #   port: 443
  #   password: yourpsk
  #   # client-fingerprint: random # Available: "chrome","firefox","safari","random","none"
  #   # fingerprint: xxxx
  #   # udp: true
  #   # sni: example.com # aka server name
  #   # alpn:
  #   #   - h2
  #   #   - http/1.1
  #   # skip-cert-verify: true
  #   # ss-opts: # like trojan-go's `shadowsocks` config
  #   #   enabled: false
  #   #   method: aes-128-gcm # aes-128-gcm/aes-256-gcm/chacha20-ietf-poly1305
  #   #   password: "example"

proxy-groups:

  # url-test 将按照 url 测试结果使用延迟最低节点
  - name: "auto"
    type: url-test
    proxies:
      - ss1
      - ss2
      - vmess1
    # tolerance: 150
    # lazy: true
    # expected-status: 204 # 当健康检查返回状态码与期望值不符时，认为节点不可用
    url: "https://cp.cloudflare.com/generate_204"
    interval: 300

  # fallback 将按照 url 测试结果按照节点顺序选择
  - name: "fallback-auto"
    type: fallback
    proxies:
      - ss1
      - ss2
      - vmess1
    url: "https://cp.cloudflare.com/generate_204"
    interval: 300

  # # load-balance 将按照算法随机选择节点
  # - name: "load-balance"
  #   type: load-balance
  #   proxies:
  #     - ss1
  #     - ss2
  #     - vmess1
  #   url: "https://cp.cloudflare.com/generate_204"
  #   interval: 300
  # strategy: consistent-hashing # 可选 round-robin 和 sticky-sessions

  # select 用户自行选择节点
  - name: Proxy
    type: select
    # disable-udp: true
    proxies:
      - ss1
      - ss2
      - vmess1
      - auto

  # 配置指定 interface-name 和 fwmark 的 DIRECT
  - name: en1
    type: select
    interface-name: en1
    routing-mark: 6667
    proxies:
      - DIRECT

  - name: UseProvider
    type: select
    filter: "HK|TW" # 正则表达式，过滤 provider1 中节点名包含 HK 或 TW
    use:
      - provider1
    proxies:
      - Proxy
      - DIRECT


rule-providers:
  rule1:
    behavior: classical # domain ipcidr
    interval: 259200
    path: /path/to/save/file.yaml # 默认只允许存储在 mihomo 的 Home Dir，如果想存储到任意位置，添加环境变量 SKIP_SAFE_PATH_CHECK=1
    type: http # http 的 path 可空置，默认储存路径为 homedir 的 rules 文件夹，文件名为 url 的 md5
    url: "url"
    proxy: DIRECT
  rule2:
    behavior: classical
    interval: 259200
    path: /path/to/save/file.yaml
    type: file
  rule3:
    # mrs类型ruleset，目前仅支持domain和ipcidr(即不支持classical），
    #
    # 对于behavior=domain:
    #  - format=yaml 可以通过“mihomo convert-ruleset domain yaml XXX.yaml XXX.mrs”转换到mrs格式
    #  - format=text 可以通过“mihomo convert-ruleset domain text XXX.text XXX.mrs”转换到mrs格式
    #  - XXX.mrs 可以通过"mihomo convert-ruleset domain mrs XXX.mrs XXX.text"转换回text格式（暂不支持转换回yaml格式）
    #
    # 对于behavior=ipcidr:
    #  - format=yaml 可以通过“mihomo convert-ruleset ipcidr yaml XXX.yaml XXX.mrs”转换到mrs格式
    #  - format=text 可以通过“mihomo convert-ruleset ipcidr text XXX.text XXX.mrs”转换到mrs格式
    #  - XXX.mrs 可以通过"mihomo convert-ruleset ipcidr mrs XXX.mrs XXX.text"转换回text格式（暂不支持转换回yaml格式）
    #
    type: http
    url: "url"
    format: mrs
    behavior: domain
    path: /path/to/save/file.mrs
rules:
  - RULE-SET,rule1,REJECT
  - IP-ASN,1,PROXY
  - DOMAIN-REGEX,^abc,DIRECT
  - DOMAIN-SUFFIX,baidu.com,DIRECT
  - DOMAIN-KEYWORD,google,ss1
  - IP-CIDR,1.1.1.1/32,ss1
  - IP-CIDR6,2409::/64,DIRECT
  # 当满足条件是 TCP 或 UDP 流量时，使用名为 sub-rule-name1 的规则集
  - SUB-RULE,(OR,((NETWORK,TCP),(NETWORK,UDP))),sub-rule-name1
  - SUB-RULE,(AND,((NETWORK,UDP))),sub-rule-name2
# 定义多个子规则集，规则将以分叉匹配，使用 SUB-RULE 使用
#                                               google.com(not match)--> baidu.com(match)
#                                                /                                ｜
#                                               /                                 ｜
#  https://baidu.com  --> rule1 --> rule2 --> sub-rule-name1(match tcp)          使用 DIRECT
#
#
#                                              google.com(not match)--> baidu.com(not match)
#                                                /                            ｜
#                                               /                             ｜
#  dns 1.1.1.1  --> rule1 --> rule2 --> sub-rule-name1(match udp)         sub-rule-name2(match udp)
#                                                                             ｜
#                                                                             ｜
#                                                                 使用 REJECT <-- 1.1.1.1/32(match)
#


